# -*- coding: utf-8 -*-
"""LR_2_task_5

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e-ODOuNwla6hLdOod_-icR1-NGDyJCC1
"""

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.linear_model import RidgeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn.metrics import confusion_matrix
from io import BytesIO

# Завантаження даних
iris = load_iris()
X, y = iris.data, iris.target

# Розбиття на train/test
Xtrain, Xtest, ytrain, ytest = train_test_split(X, y, test_size=0.3, random_state=0)

# Ridge-класифікатор
clf = RidgeClassifier(tol=1e-2, solver="sag")
clf.fit(Xtrain, ytrain)

# Прогноз
ypred = clf.predict(Xtest)

# Метрики
print('Accuracy:', np.round(metrics.accuracy_score(ytest, ypred), 4))
print('Precision:', np.round(metrics.precision_score(ytest, ypred, average='weighted'), 4))
print('Recall:', np.round(metrics.recall_score(ytest, ypred, average='weighted'), 4))
print('F1 Score:', np.round(metrics.f1_score(ytest, ypred, average='weighted'), 4))
print('Cohen Kappa Score:', np.round(metrics.cohen_kappa_score(ytest, ypred), 4))
print('Matthews Corrcoef:', np.round(metrics.matthews_corrcoef(ytest, ypred), 4))
print('\nClassification Report:\n', metrics.classification_report(ytest, ypred, target_names=iris.target_names))

# Матриця плутанини
mat = confusion_matrix(ytest, ypred)

# Побудова теплової карти
plt.figure(figsize=(6,5))
sns.heatmap(mat, annot=True, fmt='d', cmap='Blues', cbar=False,
            xticklabels=iris.target_names, yticklabels=iris.target_names)
plt.xlabel('Predicted Label')
plt.ylabel('True Label')
plt.title('Confusion Matrix (Iris + Ridge)')
plt.savefig("Confusion.jpg")  # Збереження у jpg
plt.show()

# Додатково: SVG у BytesIO (не обов'язково)
f = BytesIO()
plt.savefig(f, format="svg")